/* This file defines various details of the metrics which are measured by CCSM

   Enum name : Member of MetricType_e enumeration used to refer to the metric
   Short name : Mnemonic for the metric containing no spaces.  Used for filtering on the command line.
   Long name : Full name for the metric
   Glob : Does the metric apply at the global (i.e. collection of files) level 
   File : Does the metric apply at the file level?
   Fn: Does the metric apply at the function level?
   Mtd: Does the metric apply at the method level?
   Cumulative : Is the metric reported a cumulative value based on the node + children (e.g. count at the file context + count at fn + count at method)
   Multipass : Does this metric assumulate across multiple passes of the file?  Currently only meaningful with respect to files which are included in more than one of the C files being analysed
   Report Local : In the case that it is a cumulative value, should the metric for the current context be reported in addition?
   Scaling : Scaling factor to be applied to the integer measure of the metric
   Description : Additional information (above and beyond the "long name") relating to the metric
*/

        /* Enum name                                          Short Name                        Long Name                         				    Glob?  File?  Fn?    Mtd?   Cumulative? Multipass? Report Local? Scaling   Description */
METRIC( METRIC_TYPE_FILES,                                    "FILE_CNT",                       "Files",                          				    true,  false, false, false, false,      false,     false,        1,        "" )
METRIC( METRIC_TYPE_FUNCTIONS,                                "FUNC_CNT",                       "Functions",                      				    true,  true,  false, false, true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_IF,                                       "STMT_IF_CNT",                    "IF statements",                  				    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_ELSE,                                     "STMT_ELSE_CNT",                  "ELSE statements",                				    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_FORLOOP,                                  "STMT_FOR_CNT",                   "FOR loops",                      				    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_RETURN,                                   "STMT_RETURN_CNT",                "RETURN statements",              				    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_WHILELOOP,                                "STMT_WHILE_CNT",                 "WHILE loops",                    				    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_SWITCH,                                   "STMT_SWITCH_CNT",                "SWITCH statements",              				    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_CASE,                                     "STMT_CASE_CNT",                  "CASE statements",                				    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_DEFAULT,                                  "STMT_DEFAULT_CNT",               "DEFAULT statements",             				    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_GOTO,                                     "STMT_GOTO_CNT",                  "GOTO statements",							        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_LABEL,                                    "STMT_LABEL_CNT",                 "LABEL statements",                                 true,  true,  true,  true,  true,       false,     false,        1,        "" )
/* TODO: Explicitly count anonymous typedefs? */
METRIC( METRIC_TYPE_TYPEDEF_FILE,                             "TYPEDEF_FILE_CNT",               "File-scope typedefs",                              true,  true,  false, false, true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TYPEDEF_FN,                               "TYPEDEF_FN_CNT",                 "Function-scope typedefs",                          true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_VARIABLE_FILE_LOCAL,                      "VAR_FILE_LOC_CNT",               "File-scope total local variable declarations",     true,  true,  false, false, true,       false,     false,        1,        "Includes auto and static but not extern" )
METRIC( METRIC_TYPE_VARIABLE_FILE_STATIC,                     "VAR_FILE_LOC_STATIC_CNT",        "File-scope static variable declarations",          true,  true,  false, false, true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_VARIABLE_FILE_EXTERN,                     "VAR_FILE_EXT_CNT",               "File-scope external variable declarations",        true,  true,  false, false, true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_VARIABLE_FN_LOCAL,                        "VAR_FN_LOC_CNT",                 "Function-scope total local variable declarations", true,  false, true,  true,  true,       false,     false,        1,        "Includes auto and static but not extern" )
METRIC( METRIC_TYPE_VARIABLE_FN_STATIC,                       "VAR_FN_LOC_STATIC_CNT",          "Function-scope static variable declarations",      true,  false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_VARIABLE_FN_REGISTER,                     "VAR_FN_LOC_REG_CNT",             "Function-scope register variable declarations",    true,  false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_VARIABLE_FN_AUTO,                         "VAR_FN_LOC_AUTO_CNT",            "Function-scope auto variable declarations",        true,  false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_VARIABLE_FN_EXTERN,                       "VAR_FN_EXT_CNT",                 "Function-scope external variable declarations",    true,  false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_RETURNPOINTS,                             "RETURN_POINT_CNT",               "Return points",                                    false, false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_STATEMENTS,                               "STMT_CNT",                       "Statements",									    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_CYCLOMATIC,                               "STMT_MCCABE",                    "Statement based McCabe",							false, false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_MODIFIED_CYCLOMATIC,                      "STMT_MOD_MCCABE",                "Statement based Modified McCabe",					false, false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOK_CYCLOMATIC,                           "TOK_MCCABE",                     "Token based McCabe",								false, false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOK_MODIFIED_CYCLOMATIC,                  "TOK_MOD_MCCABE",                 "Token based Modified McCabe",						false, false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_LOCAL_FUNCTIONS,                          "FUNC_LOCAL_CNT",                 "Local Functions",									true,  true,  false, false, true,       false,     false,        1,        "" )
/* TODO: These two sum the child nodes too, which is un-wanted */
METRIC( METRIC_TYPE_EXTERN_EXPL_FUNCTIONS,                    "FUNC_EXTERN_EXPL_CNT",           "External (explicit) functions declarations",		true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_EXTERN_IMPL_FUNCTIONS,                    "FUNC_EXTERN_IMPL_CNT",           "External (implicit) functions declarations",		true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_INLINE_FUNCTIONS,                         "FUNC_INLINE_CNT",                "Inline Functions",									true,  true,  false, false, true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_CALLED_BY,                                "FUNC_CALLED_BY",                 "Number of local functions calling this function",  false, false, true,  true,  true,       true,      false,        1,        "" )
METRIC( METRIC_TYPE_FUNCTION_CALLS,                           "OP_FN_CALL_CNT",                 "Function Calls",									false, false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_DIFFERENT_FUNCTIONS_CALLED,               "OP_FN_CALL_UNIQUE_CNT",          "No. different functions called",					false, false, true,  true,  true,       false,     false,        1,        "Of the total number of functions called (see OP_FN_CALL_CNT), this represents the number of uniquely addressed functions.  Does not include functions called via function pointers" )
METRIC( METRIC_TYPE_LOCAL_FUNCTION_CALLS,                     "LOCAL_FN_CALL_CNT",              "Local Function Calls",								false, false, true,  true,  true,       true,      false,        1,        "Does not include functions called via function pointers" )
METRIC( METRIC_TYPE_BYTE_COUNT,                               "FILE_SIZE",                      "Size in bytes",									true,  true,  false, false, true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_LINE_COUNT,                               "FILE_LINE_CNT",                  "Size in lines",									true,  true,  false, false, true,       false,     false,        1,        "Counts number of newlines in the file" )
METRIC( METRIC_TYPE_COMMENT_BYTE_COUNT,                       "COMMENT_BYTE_CNT",               "Comments in bytes",								true,  true,  false, false, true,       false,     false,        1,        "Counts the total number of bytes which are used in comments.  Note that --exclude-function does not have any effect on this metric." )
METRIC( METRIC_TYPE_COMMENT_COUNT,                            "COMMENT_CNT",                    "Comment Count",									true,  true,  false, false, true,       false,     false,        1,        "Counts the total number of comments.  Note that --exclude-function does not have any effect on this metric." )
METRIC( METRIC_TYPE_FUNCTION_LINE_COUNT,                      "FUNC_LINE_CNT",                  "Function (body) size in lines",					false, false, true,  true,  true,       false,     false,        1,        "Counts number of newlines in the function body" )
METRIC( METRIC_TYPE_FUNCTION_PARAMETERS,                      "STMT_HIS_PARAM",                 "Function Parameters",								false, false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_DECISIONS,                                "TODO",                           "Decisions",										true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_LOOPS,                                    "TODO",                           "Loops",											true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_NESTING_LEVEL,                            "TODO",                           "Nesting Level",									false, false, true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_VOCF,                                     "HIS_VOCF",                       "VOCF",												true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_ASSIGN,               "OP_ASSIGN_CNT",                  "Basic assignment operators",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_ADDITION,             "OP_ADD_CNT",                     "Addition operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_ADDITION_ASSIGN,      "OP_ADD_ASSIGN_CNT",              "Addition with assign operators",					true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_SUBTRACTION,          "OP_SUB_CNT",                     "Subtraction operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_SUBTRACTION_ASSIGN,   "OP_SUB_ASSIGN_CNT",              "Subtraction with assign operators",				true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_UNARY_PLUS,           "OP_UNARY_PLUS_CNT",              "Unary plus operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_UNARY_MINUS,          "OP_UNARY_MINUS_CNT",             "Unary minus operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_MULTIPLICATION,       "OP_MULT_CNT",                    "Multiplication operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_MULTIPLICATION_ASSIGN,"OP_MULT_ASSIGN_CNT",             "Multiplication with assignment operators",			true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_DIVISION,             "OP_DIV_CNT",                     "Division operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_DIVISION_ASSIGN,      "OP_DIV_ASSIGN_CNT",              "Division with assign operators",					true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_MODULO,               "OP_MOD_CNT",                     "Modulo operators",									true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_MODULO_ASSIGN,        "OP_MOD_ASSIGN_CNT",              "Modulo with assign operators",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_INCREMENT_PRE,        "OP_INC_PRE_CNT",                 "Pre-increment operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_INCREMENT_POST,       "OP_INC_POST_CNT",                "Post-increment operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_DECREMENT_PRE,        "OP_DEC_PRE_CNT",                 "Pre-decrement operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARITHMETIC_DECREMENT_POST,       "OP_DEC_POST_CNT",                "Post-decrement operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_SHIFT_LEFT,                      "OP_SHFT_LEFT_CNT",               "Left shift operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_SHIFT_LEFT_ASSIGN,               "OP_SHFT_LEFT_ASSIGN_CNT",        "Left shift with assign operators",					true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_SHIFT_RIGHT,                     "OP_SHFT_RGHT_CNT",               "Right shift operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_SHIFT_RIGHT_ASSIGN,              "OP_SHFT_RGHT_ASSIGN_CNT",        "Right shift with assign operators",				true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_COMP_LESS_THAN,                  "OP_CMP_LT_CNT",                  "Less than operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_COMP_GREATER_THAN,               "OP_CMP_GT_CNT",                  "Greater than operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_COMP_LESS_THAN_EQUAL,            "OP_CMP_LT_EQ_CNT",               "Less than or equal operators",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_COMP_GREATER_THAN_EQUAL,         "OP_CMP_GT_EQ_CNT",               "Greater than or equal operators",					true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_COMP_EQUAL,                      "OP_CMP_EQ_CNT",                  "Equality operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_COMP_NOT_EQUAL,                  "OP_CMP_NEQ_CNT",                 "Inequality operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_COMMA,                           "OP_COMMA_CNT",                   "Comma operators",									true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_TERNARY,                         "OP_TERNARY_CNT",                 "TERNARY operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_LOGICAL_AND,                     "OP_LOG_AND_CNT",                 "LOGICAL AND operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_LOGICAL_OR,                      "OP_LOG_OR_CNT",                  "LOGICAL OR operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_LOGICAL_NOT,                     "OP_LOG_NIT_CNT",                 "LOGICAL NOT operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_BITWISE_AND,                     "OP_BITWISE_AND_CNT",             "Bitwise and operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_BITWISE_AND_ASSIGN,              "OP_BITWISE_AND_ASSIGN_CNT",      "Bitwise and with assign operators",				true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_BITWISE_OR,                      "OP_BITWISE_OR_CNT",              "Bitwise or operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_BITWISE_OR_ASSIGN,               "OP_BITWISE_OR_ASSIGN_CNT",       "Bitwise or with assign operators",					true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_BITWISE_XOR,                     "OP_BITWISE_XOR_CNT",             "Bitwise xor operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_BITWISE_XOR_ASSIGN,              "OP_BITWISE_XOR_ASSIGN_CNT",      "Bitwise xor with assign operators",				true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_BITWISE_NOT,                     "OP_BITWISE_NIT_CNT",             "Bitwise not operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_PTR_TO_MEMBER_DIRECT,            "OP_PTR_TO_MEMBER_DIRECT_CNT",    "Pointer to member (direct) operators",				true,  true,  false, true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_PTR_TO_MEMBER_INDIRECT,          "OP_PTR_TO_MEMBER_INDIRECT_CNT",  "Pointer to member (indirect) operators",		    true,  true,  false, true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ADDRESS_OF,                      "OP_ADDR_OF_CNT",                 "Address of operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_DEREFERENCE,                     "OP_DEREF_CNT",                   "Dereference operators",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ARRAY_SUBSCRIPT,                 "OP_ARRAY_SUBSCRIPT_CNT",         "Array subscript operators",						true,  true,  true,	 true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_MEMBER_ACCESS_DIRECT,            "OP_MEMBER_ACCESS_DIRECT_CNT",    "Member access (direct) operators",					true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_MEMBER_ACCESS_POINTER,           "OP_MEMBER_ACCESS_POINTER_CNT",   "Member access (via pointer) operators",			true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_SIZE_OF,                         "OP_SIZEOF_CNT",                  "Sizeof operators",									true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_ALIGN_OF,                        "OP_ALIGNOF_CNT",                 "Alignof operators",								true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_CAST,                            "OP_CAST_CNT",                    "Cast operators",									true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_TYPES,                           "OP_TYPES_CNT",                   "Number of different types of C operator",			true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_OPERATOR_TYPES_HALSTEAD,                  "OP_TYPES_HALSTEAD_CNT",          "Number of different types of operator (Halstead)", true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_BOOL,                               "TOK_BOOL",                       "Number of 'bool' tokens",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_CHAR,                               "TOK_CHAR",                       "Number of 'char' tokens",					   	    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_DOUBLE,                             "TOK_DOUBLE",                     "Number of 'double' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_FLOAT,                              "TOK_FLOAT",                      "Number of 'float' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_INT,                                "TOK_INT",                        "Number of 'int' tokens",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_LONG,                               "TOK_LONG",                       "Number of 'long' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_SHORT,                              "TOK_SHORT",                      "Number of 'short' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_SIGNED,                             "TOK_SIGNED",                     "Number of 'signed' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_UNSIGNED,                           "TOK_UNSIGNED",                   "Number of 'unsigned' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_VOID,                               "TOK_VOID",                       "Number of 'void' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_CONST,                              "TOK_CONST",                      "Number of 'const' tokens",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_EXTERN,                             "TOK_EXTERN",                     "Number of 'extern' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_INLINE,                             "TOK_INLINE",                     "Number of 'inline' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_REGISTER,                           "TOK_REGISTER",                   "Number of 'register' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_STATIC,                             "TOK_STATIC",                     "Number of 'static' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_TYPEDEF,                            "TOK_TYPEDEF",                    "Number of 'typedef' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_VIRTUAL,                            "TOK_VIRTUAL",                    "Number of 'virtual' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MUTABLE,                            "TOK_MUTABLE",                    "Number of 'mutable' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_FRIEND,                             "TOK_FRIEND",                     "Number of 'friend' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_VOLATILE,                           "TOK_VOLATILE",                   "Number of 'volatile' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_AUTO,                               "TOK_AUTO",                       "Number of 'auto' tokens",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_ASM,                                "TOK_ASM",                        "Number of 'asm' tokens",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_BREAK,                              "TOK_BREAK",                      "Number of 'break' tokens",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_CASE,                               "TOK_CASE",                       "Number of 'case' tokens",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_CLASS,                              "TOK_CLASS",                      "Number of 'class' tokens",							true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_CONTINUE,                           "TOK_CONTINUE",                   "Number of 'continue' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_DEFAULT,                            "TOK_DEFAULT",                    "Number of 'default' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_DELETE,                             "TOK_DELETE",                     "Number of 'delete' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_DO,                                 "TOK_DO",                         "Number of 'do' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_ELSE,                               "TOK_ELSE",                       "Number of 'else' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_ENUM,                               "TOK_ENUM",                       "Number of 'enum' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_FOR,                                "TOK_FOR",                        "Number of 'for' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_GOTO,                               "TOK_GOTO",                       "Number of 'goto' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_IF,                                 "TOK_IF",                         "Number of 'if' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_NEW,                                "TOK_NEW",                        "Number of 'new' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_OPERATOR,                           "TOK_OPERATOR",                   "Number of 'operator' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_PRIVATE,                            "TOK_PRIVATE",                    "Number of 'private' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_PROTECTED,                          "TOK_PROTECTED",                  "Number of 'protected' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_PUBLIC,                             "TOK_PUBLIC",                     "Number of 'public' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_RETURN,                             "TOK_RETURN",                     "Number of 'return' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_SIZEOF,                             "TOK_SIZEOF",                     "Number of 'sizeof' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_STRUCT,                             "TOK_STRUCT",                     "Number of 'struct' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_SWITCH,                             "TOK_SWITCH",                     "Number of 'switch' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_THIS,                               "TOK_THIS",                       "Number of 'this' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_UNION,                              "TOK_UNION",                      "Number of 'union' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_WHILE,                              "TOK_WHILE",                      "Number of 'while' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_NAMESPACE,                          "TOK_NAMESPACE",                  "Number of 'namespace' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_USING,                              "TOK_USING",                      "Number of 'using' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_TRY,                                "TOK_TRY",                        "Number of 'try' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_CATCH,                              "TOK_CATCH",                      "Number of 'catch' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_THROW,                              "TOK_THROW",                      "Number of 'throw' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
// TODO: const_cast, static_cast, dynamic_cast, reinterpret_cast
METRIC( METRIC_TYPE_TOKEN_TYPEID,                             "TOK_TYPEID",                     "Number of 'typeid' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_TEMPLATE,                           "TOK_TEMPLATE",                   "Number of 'template' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_EXPLICIT,                           "TOK_EXPLICIT",                   "Number of 'explicit' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_TRUE,                               "TOK_TRUE",                       "Number of 'true' tokens",					   	    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_FALSE,                              "TOK_FALSE",                      "Number of 'false' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_TYPENAME,                           "TOK_TYPENAME",                   "Number of 'typename' tokens",						true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_NOT,                                "TOK_NOT",                        "Number of '!' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_NOT_EQUAL,                          "TOK_NOT_EQUAL",                  "Number of '!=' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MODULO,                             "TOK_MODULO",                     "Number of '%' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MODULO_ASSIGN,                      "TOK_MODULO_ASSIGN",              "Number of '%=' tokens",					    	true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_AMP,                                "TOK_AMP",                        "Number of '&' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_AMPAMP,                             "TOK_AMPAMP",                     "Number of '&&' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_PIPEPIPE,                           "TOK_PIPEPIPE",                   "Number of '||' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_AND_ASSIGN,                         "TOK_AND_ASSIGN",                 "Number of '&=' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_LPAREN,                             "TOK_LPAREN",                     "Number of '(' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_RPAREN,                             "TOK_RPAREN",                     "Number of ')' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_ASTERISK,                           "TOK_ASTERISK",                   "Number of '*' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_ASTERISK_ASSIGN,                    "TOK_ASTERISK_ASSIGN",            "Number of '*=' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_PLUS,                               "TOK_PLUS",                       "Number of '+' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_PLUSPLUS,                           "TOK_PLUSPLUS",                   "Number of '++' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_PLUS_ASSIGN,                        "TOK_PLUS_ASSIGN",                "Number of '+=' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_COMMA,                              "TOK_COMMA",                      "Number of ',' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MINUS,                              "TOK_MINUS",                      "Number of '-' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MINUSMINUS,                         "TOK_MINUSMINUS",                 "Number of '--' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MINUS_ASSIGN,                       "TOK_MINUS_ASSIGN",               "Number of '-=' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MEMBER_POINTER,                     "TOK_MEMBER_PTR",                 "Number of '->' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MEMBER_REF,                         "TOK_MEMBER_REF",                 "Number of '.' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_ELLIPSIS,                           "TOK_ELLIPSIS",                   "Number of '...' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_SLASH,                              "TOK_SLASH",                      "Number of '/' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_SLASH_ASSIGN,                       "TOK_SLASH_ASSIGN",               "Number of '/=' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_COLON,                              "TOK_COLON",                      "Number of ':' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_COLONCOLON,                         "TOK_COLONCOLON",                 "Number of '::' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_LESS,                               "TOK_LESS",                       "Number of '<' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_LESSLESS,                           "TOK_LESSLESS",                   "Number of '<<' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_LESSLESS_ASSIGN,                    "TOK_LESSLESS_ASSIGN",            "Number of '<<=' tokens",					    	true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_LESS_EQUAL,                         "TOK_LESS_EQUAL",                 "Number of '<=' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_ASSIGN,                             "TOK_ASSIGN",                     "Number of '=' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_COMPARISON,                         "TOK_COMPARISON",                 "Number of '==' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MORE,                               "TOK_MORE",                       "Number of '>' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MOREMORE,                           "TOK_MOREMORE",                   "Number of '>>' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MOREMORE_ASSIGN,                    "TOK_MOREMORE_ASSIGN",            "Number of '>>=' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_MORE_EQUAL,                         "TOK_MORE_EQUAL",                 "Number of '>=' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_LSQUARE,                            "TOK_LSQUARE",                    "Number of '[' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_RSQUARE,                            "TOK_RSQUARE",                    "Number of ']' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_LBRACE,                             "TOK_LBRACE",                     "Number of '{' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_RBRACE,                             "TOK_RBRACE",                     "Number of '}' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_QUESTION,                           "TOK_QUESTION",                   "Number of '?' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_CARET,                              "TOK_CARET",                      "Number of '^' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_CARET_ASSIGN,                       "TOK_CARET_ASSIGN",               "Number of '^=' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_PIPE,                               "TOK_PIPE",                       "Number of '|' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_PIPE_ASSIGN,                        "TOK_PIPE_ASSIGN",                "Number of '|=' tokens",						    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_TILDE,                              "TOK_TILDE",                      "Number of '~' tokens",						        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_NUMERIC_CONSTANTS,                  "TOK_NUMERIC_CONST",              "Number of numerical constant tokens",			    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_NUMERIC_CONSTANTS_UNIQ,             "TOK_NUMERIC_CONST_UNIQ",         "Number of unique numerical constant tokens",	    true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_STRING_LITERALS,                    "TOK_STRING_LITERALS",            "Number of string literal tokens",			        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_STRING_LITERALS_UNIQ,               "TOK_STRING_LITERALS_UNIQ",       "Number of unique string literal tokens",			true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_UNRESERVED_IDENTIFIERS,             "TOK_UNRESERVED_IDENTIFIERS",     "Number of (unreserved) identifier tokens",			true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_UNRESERVED_IDENTIFIERS_UNIQ,        "TOK_UNRESERVED_IDENTIFIERS_UNIQ","Number of unique (unreserved) identifier tokens",  true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_CHAR_CONSTS,                        "TOK_CHAR_CONSTS",                "Number of character constants",	   		        true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_TOKEN_CHAR_CONSTS_UNIQ,                   "TOK_CHAR_CONSTS_UNIQ",           "Number of unique character constants",             true,  true,  true,  true,  true,       false,     false,        1,        "" )
METRIC( METRIC_TYPE_HIS_COMMENT_DENSITY,                      "TOK_HIS_COMF",                   "Comment density",									true,  true,  false, false, true,       false,     false,     1000,        "Relationship of the number of comments to the number of statements.  HIS metric." )
METRIC( METRIC_TYPE_HIS_STATEMENT,                            "TOK_HIS_STMT",                   "Statement count",									true,  true,  true,  true,  true,       false,     false,        1,        "Number of 'statements'" )
